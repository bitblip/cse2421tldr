<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on CSE 2421 TL;DR</title>
    <link>/cse2421tldr/tags/c/</link>
    <description>Recent content in c on CSE 2421 TL;DR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jan 2020 03:30:11 -0500</lastBuildDate><atom:link href="/cse2421tldr/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Text: Pointers On C (4_C_Part_1)</title>
      <link>/cse2421tldr/posts/text-pointers-on-c-ch5/</link>
      <pubDate>Sun, 19 Jan 2020 03:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/text-pointers-on-c-ch5/</guid>
      <description>Operators and Expressions </description>
    </item>
    
    <item>
      <title>Lecture 4</title>
      <link>/cse2421tldr/posts/lecture-4/</link>
      <pubDate>Sun, 19 Jan 2020 02:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/lecture-4/</guid>
      <description>Lecture 4 Video : C Part 1
Slides : C Part 1
Compilation The way c programs are built.
 Source file  $ gcc -o hello hello.c   Preprocessor  Collects .c and .h into .i file.   Compiler  Converts .i file into assembly language file .s.   Assembler  Converts .s into object file .o. Encoded instruction and data bit strings. Contains unresolved symbols.   Link Editor  Resolves unresolved symbols.</description>
    </item>
    
    <item>
      <title>Text: Pointers On C (3_Intro_To_C)</title>
      <link>/cse2421tldr/posts/text-pointers-on-c-ch14-copy/</link>
      <pubDate>Wed, 15 Jan 2020 02:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/text-pointers-on-c-ch14-copy/</guid>
      <description>The Preprocessor First step in compiling. Removes comments, inserts #include contents, substitutes #define symbols, and processes conditional compilation directives.
Predefined symbols    Symbol Sample Value Meaning     __FILE__ &amp;ldquo;name.c&amp;rdquo; Name of the source file being compiled.   __LINE__ 25 Line number of the current line in the file.   __DATE__ &amp;ldquo;Jan 1 2020&amp;rdquo; Date the file was compiled.   __TIME__ &amp;ldquo;18:04:30&amp;rdquo; Time that the file was compiled.</description>
    </item>
    
    <item>
      <title>Lecture 3</title>
      <link>/cse2421tldr/posts/lecture-3/</link>
      <pubDate>Tue, 14 Jan 2020 02:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/lecture-3/</guid>
      <description>Intro To C Video : Intro To C
Slides : Intro To C
C is procedural, compiles to machine code that runs directly on the hardware. Direct manipulation of memory, no garbage collection. Memory leaks occur when memory is mismanaged.
RAM is finite. 64 bit address spaces, use 42 bits, 2^42 bytes (~4TB) of max RAM.
C does NOT  Classes/Objects (n the OOP sense) Encapsulation Inheritance Not object oriented  Features ARE approximated by writing code in a disciplined way.</description>
    </item>
    
    <item>
      <title>Lecture 1 and 2</title>
      <link>/cse2421tldr/posts/lecture-1/</link>
      <pubDate>Sun, 12 Jan 2020 02:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/lecture-1/</guid>
      <description>Lecture 1 Intro  Your browser does not support video.  Slides : Intro To Course
Email : Mike green.15@osu.edu
Text : Computer Systems: A Programmer’s Perspective, 3rd Edition, by Randall E. Bryant and David R. O’Hallaron, (Required)
Text : Pointers on C, by Kenneth Reek 1997
Always include the following certification text when submitting assignments. Either in a readme or in a code file as a comment.
 BY SUBMITTING THIS FILE TO CARMEN, I CERTIFY THAT I HAVE STRICTLY ADHERED TO THE TENURES OF THE OHIO STATE UNIVERSITY’S ACADEMIC INTEGRITY POLICY WITH RESPECT TO THIS ASSIGNMENT.</description>
    </item>
    
  </channel>
</rss>
