<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pointers on CSE 2421 TL;DR</title>
    <link>/cse2421tldr/tags/pointers/</link>
    <description>Recent content in pointers on CSE 2421 TL;DR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Jan 2020 02:30:11 -0500</lastBuildDate><atom:link href="/cse2421tldr/tags/pointers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lecture 10</title>
      <link>/cse2421tldr/posts/lecture-10/</link>
      <pubDate>Sun, 26 Jan 2020 02:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/lecture-10/</guid>
      <description>Lecture 10 Video : C Pointers 2 Part A Video : C Pointers 2 Part B
Slides : C Pointers Part 2
Pointers part 2 Relationship between arrays and pointers, void pointers, dynamic memory, pointer arithmetic, and passing pointers.
Arrays Arrays can only be accessed by pointers. Static arrays are allocated by the compiler, dynamic arrays must be allocated with malloc at runtime and will be referenced by a void pointer.</description>
    </item>
    
    <item>
      <title>Lecture 9</title>
      <link>/cse2421tldr/posts/lecture-9/</link>
      <pubDate>Sun, 26 Jan 2020 02:30:11 -0500</pubDate>
      
      <guid>/cse2421tldr/posts/lecture-9/</guid>
      <description>Lecture 6 Video : C Pointers 1 Part A Video : C Pointers 1 Part B
Slides : C Pointers Part 1
Pointers All variables have an address. This identifies the location in memory of the value of the variable. On 64bit systems, the address is an 8-byte integer. Memory addresses can range from 0 up to the size of memory in bytes - 1.
A variable name is known as the identifier and the value is stored at the identifiers address.</description>
    </item>
    
  </channel>
</rss>
